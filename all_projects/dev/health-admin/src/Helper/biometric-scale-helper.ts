/* eslint-disable max-len */
export function biometricScalePointer(data?: number | null) {
  switch (data) {
    case -3:
      return 'M41.7446 142.681C37.5632 151.159 27.1572 154.712 18.5022 150.616C9.84729 146.52 6.22079 136.326 10.4022 127.847C14.5837 119.369 24.9897 115.816 33.6446 119.913C42.2996 124.009 45.9261 134.202 41.7446 142.681ZM23.4013 140.682C26.4559 142.128 30.1286 140.874 31.6044 137.882C33.0803 134.889 31.8003 131.292 28.7456 129.846C25.6909 128.4 22.0182 129.654 20.5424 132.646C19.0666 135.639 20.3466 139.237 23.4013 140.682Z';
    case -2:
      return 'M58.4554 88.8753C54.3592 97.3537 44.1655 100.906 35.6871 96.8101C27.2086 92.7139 23.6561 82.5202 27.7523 74.0417C31.8484 65.5633 42.0422 62.0108 50.5206 66.1069C58.9991 70.2031 62.5516 80.3968 58.4554 88.8753ZM40.4862 86.8767C43.4786 88.3224 47.0763 87.0686 48.522 84.0762C49.9678 81.0838 48.7139 77.486 45.7215 76.0403C42.7291 74.5946 39.1313 75.8484 37.6856 78.8408C36.2399 81.8332 37.4938 85.431 40.4862 86.8767Z';
    case -1:
      return 'M113.716 39.4322C109.62 47.9106 99.4259 51.4631 90.9475 47.367C82.469 43.2708 78.9165 33.0771 83.0127 24.5986C87.1088 16.1202 97.3026 12.5676 105.781 16.6638C114.259 20.76 117.812 30.9537 113.716 39.4322ZM95.7465 37.4336C98.7389 38.8793 102.337 37.6255 103.782 34.6331C105.228 31.6407 103.974 28.0429 100.982 26.5972C97.9895 25.1515 94.3917 26.4053 92.946 29.3977C91.5003 32.3901 92.7542 35.9879 95.7465 37.4336Z';
    case 0:
      return 'M171.884 27.7985C167.788 36.2769 157.594 39.8295 149.116 35.7333C140.637 31.6371 137.085 21.4434 141.181 12.965C145.277 4.48652 155.471 0.93399 163.949 5.03016C172.428 9.12633 175.98 19.3201 171.884 27.7985ZM153.915 25.7999C156.907 27.2456 160.505 25.9918 161.951 22.9994C163.396 20.007 162.143 16.4092 159.15 14.9635C156.158 13.5178 152.56 14.7717 151.114 17.7641C149.669 20.7564 150.922 24.3542 153.915 25.7999Z';
    case 1:
      return 'M225.69 42.3406C221.594 50.819 211.4 54.3715 202.921 50.2754C194.443 46.1792 190.89 35.9855 194.987 27.507C199.083 19.0286 209.276 15.4761 217.755 19.5722C226.233 23.6684 229.786 33.8621 225.69 42.3406ZM207.72 40.342C210.713 41.7877 214.311 40.5339 215.756 37.5415C217.202 34.5491 215.948 30.9513 212.956 29.5056C209.963 28.0599 206.366 29.3137 204.92 32.3061C203.474 35.2985 204.728 38.8963 207.72 40.342Z';
    case 2:
      return 'M273.679 88.8753C269.582 97.3537 259.389 100.906 250.91 96.8101C242.432 92.7139 238.879 82.5202 242.975 74.0417C247.072 65.5633 257.265 62.0108 265.744 66.1069C274.222 70.2031 277.775 80.3968 273.679 88.8753ZM255.709 86.8767C258.702 88.3224 262.299 87.0686 263.745 84.0762C265.191 81.0838 263.937 77.486 260.945 76.0403C257.952 74.5946 254.354 75.8484 252.909 78.8408C251.463 81.8332 252.717 85.431 255.709 86.8767Z';
    case 3:
      return 'M292.583 142.681C288.487 151.159 278.293 154.712 269.815 150.616C261.336 146.52 257.784 136.326 261.88 127.847C265.976 119.369 276.17 115.816 284.648 119.913C293.127 124.009 296.679 134.202 292.583 142.681ZM274.614 140.682C277.606 142.128 281.204 140.874 282.65 137.882C284.096 134.889 282.842 131.292 279.849 129.846C276.857 128.4 273.259 129.654 271.813 132.646C270.368 135.639 271.622 139.237 274.614 140.682Z';
  }
  return '';
}

export function biometricPointerMiddle(data?: number | null) {
  switch (data) {
    case -3:
      return 'M31.6044 137.882C30.1286 140.874 26.4559 142.128 23.4012 140.682C20.3466 139.237 19.0666 135.639 20.5424 132.646C22.0182 129.654 25.6909 128.4 28.7456 129.846C31.8003 131.292 33.0802 134.889 31.6044 137.882Z';
    case -2:
      return 'M48.5221 84.0762C47.0763 87.0686 43.4786 88.3224 40.4862 86.8767C37.4938 85.431 36.2399 81.8332 37.6856 78.8408C39.1314 75.8484 42.7291 74.5946 45.7215 76.0403C48.7139 77.486 49.9678 81.0838 48.5221 84.0762Z';
    case -1:
      return 'M103.782 34.633C102.337 37.6254 98.7389 38.8793 95.7466 37.4336C92.7542 35.9879 91.5003 32.3901 92.946 29.3977C94.3917 26.4053 97.9895 25.1515 100.982 26.5972C103.974 28.0429 105.228 31.6407 103.782 34.633Z';
    case 0:
      return 'M161.951 22.9994C160.505 25.9918 156.907 27.2456 153.915 25.7999C150.922 24.3542 149.669 20.7564 151.114 17.764C152.56 14.7717 156.158 13.5178 159.15 14.9635C162.143 16.4092 163.396 20.007 161.951 22.9994Z';
    case 1:
      return 'M215.756 37.5415C214.311 40.5339 210.713 41.7877 207.72 40.342C204.728 38.8963 203.474 35.2985 204.92 32.3061C206.366 29.3137 209.963 28.0599 212.956 29.5056C215.948 30.9513 217.202 34.5491 215.756 37.5415Z';
    case 2:
      return 'M263.745 84.0762C262.299 87.0686 258.702 88.3224 255.709 86.8767C252.717 85.431 251.463 81.8332 252.909 78.8408C254.354 75.8484 257.952 74.5946 260.945 76.0403C263.937 77.486 265.191 81.0838 263.745 84.0762Z';
    case 3:
      return 'M282.65 137.882C281.204 140.874 277.606 142.128 274.614 140.682C271.622 139.237 270.368 135.639 271.813 132.646C273.259 129.654 276.857 128.4 279.849 129.846C282.842 131.292 284.096 134.889 282.65 137.882Z';
  }
  return '';
}

export function biometricPointerColor(data?: number | null) {
  switch (data) {
    case -3:
      return '#E40F02';
    case -2:
      return '#ED6513';
    case -1:
      return '#F3DD4A';
    case 0:
      return '#60DB89';
    case 1:
      return '#29BF5C';
    case 2:
      return '#29BF5C';
    case 3:
      return '#13923E';
  }
  return '';
}
